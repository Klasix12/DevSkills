DROP TABLE IF EXISTS question_tags;
DROP TABLE IF EXISTS options;
DROP TABLE IF EXISTS match_pairs;
DROP TABLE IF EXISTS free_text_questions;
DROP TABLE IF EXISTS matching_questions;
DROP TABLE IF EXISTS multiple_choice_correct_indexes;
DROP TABLE IF EXISTS multiple_choice_questions;
DROP TABLE IF EXISTS single_choice_questions;
DROP TABLE IF EXISTS questions;
DROP TABLE IF EXISTS tags;

CREATE TABLE IF NOT EXISTS users (
    id BIGINT PRIMARY KEY,
    username VARCHAR(50) NOT NULL UNIQUE,
    is_confirmed BOOLEAN NOT NULL
);

CREATE TABLE IF NOT EXISTS questions (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    body TEXT NOT NULL,
    difficulty VARCHAR(50) NOT NULL,
    is_approved BOOLEAN,
    type VARCHAR(50) NOT NULL,
    rating INTEGER,
    views INTEGER,
    created_at TIMESTAMP NOT NULL,
    approved_at TIMESTAMP,
    approved_user_id BIGINT,
    author_id BIGINT NOT NULL,
    FOREIGN KEY (author_id) REFERENCES users(id),
    FOREIGN KEY (approved_user_id) REFERENCES users(id)
);

-- один правильный ответ
CREATE TABLE IF NOT EXISTS single_choice_questions (
    id BIGINT PRIMARY KEY,
    correct_option_index INTEGER,
    FOREIGN KEY (id) REFERENCES questions(id) ON DELETE CASCADE
);

-- несколько правильных ответов
CREATE TABLE IF NOT EXISTS multiple_choice_questions (
    id BIGINT PRIMARY KEY,
    FOREIGN KEY (id) REFERENCES questions(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS multiple_choice_correct_indexes (
    question_id BIGINT,
    correct_option_index INTEGER,
    PRIMARY KEY (question_id, correct_option_index),
    FOREIGN KEY (question_id) REFERENCES multiple_choice_questions(id) ON DELETE CASCADE
);

-- соответствие
CREATE TABLE IF NOT EXISTS matching_questions (
    id BIGINT PRIMARY KEY,
    FOREIGN KEY (id) REFERENCES questions(id) ON DELETE CASCADE
);

-- свободный ответ
CREATE TABLE IF NOT EXISTS free_text_questions (
    id BIGINT PRIMARY KEY,
    correct_answer TEXT,
    FOREIGN KEY (id) REFERENCES questions(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS options (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    text VARCHAR(255),
    question_id BIGINT,
    FOREIGN KEY (question_id) REFERENCES questions(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS match_pairs (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    left_text VARCHAR(55),
    right_text VARCHAR(55),
    question_id BIGINT,
    FOREIGN KEY (question_id) REFERENCES questions(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS tags (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(55) UNIQUE NOT NULL,
    tag_group VARCHAR(55)
);

CREATE TABLE IF NOT EXISTS question_tags (
    question_id BIGINT,
    tag_id BIGINT,
    PRIMARY KEY (question_id, tag_id),
    FOREIGN KEY (question_id) REFERENCES questions(id),
    FOREIGN KEY (tag_id) REFERENCES tags(id)
)